##
##  Copyright (c) 2019-2023, ETH Zurich. All rights reserved.
##
##  Please, refer to the LICENSE file in the root directory.
##  SPDX-License-Identifier: BSD-3-Clause
##
version: '3'

services:
  certificator:
    build:
      context: ../../
      dockerfile: deploy/docker/certificator/Dockerfile
    env_file:
      - ./environment/common.env
    networks:
      - backend
      - frontend
    volumes:
      - "./environment/keys/ca-key:/ca-key:ro"
      - "./environment/keys/user-key.pub:/user-key.pub:ro"
      - ./logs/firecrest:/var/log:delegated
      - ./ssl:/ssl

  compute:
    build:
      context: ../../
      dockerfile: deploy/docker/compute/Dockerfile
    env_file:
      - ./environment/common.env
    networks:
      - backend
      - frontend
    volumes:
      - "./environment/keys/user-key:/user-key:ro"
      - ./logs/firecrest:/var/log:delegated
      - ./ssl:/ssl

  status:
    build:
      context: ../../
      dockerfile: deploy/docker/status/Dockerfile
    env_file:
      - ./environment/common.env
    networks:
      - backend
      - frontend
    volumes:
      - ./logs/firecrest:/var/log:delegated
      - ./ssl:/ssl

  storage:
    build:
      context: ../../
      dockerfile: deploy/docker/storage/Dockerfile
    env_file:
      - ./environment/common.env
      - ./environment/storage.env
    networks:
      - backend
      - frontend
    depends_on:
      - "tasks"
      - "minio"
    volumes:
      - "./environment/keys/user-key:/user-key:ro"
      # custom host file
      - "./environment/hosts:/etc/hosts:ro"
      - ./logs/firecrest:/var/log:delegated
      - ./ssl:/ssl

  tasks:
    build:
      context: ../../
      dockerfile: deploy/docker/tasks/Dockerfile
    env_file:
      - ./environment/common.env
    environment:
      - F7T_PERSIST_PORT=6379
      - F7T_PERSIST_PWD=rediS2200
      - F7T_DEBUG_MODE=True
      - F7T_COMPUTE_TASK_EXP_TIME=86400
      - F7T_STORAGE_TASK_EXP_TIME=2678400
    depends_on:
      - "taskpersistence"
    networks:
      - backend
      - frontend
    volumes:
      - ./logs/firecrest:/var/log:delegated
      - ./ssl:/ssl

  utilities:
    build:
      context: ../../
      dockerfile: deploy/docker/utilities/Dockerfile
    env_file:
      - ./environment/common.env
    networks:
      - backend
      - frontend
    volumes:
      - "./environment/keys/user-key:/user-key:ro"
      - ./logs/firecrest:/var/log:delegated
      - ./ssl:/ssl

  reservations:
    build:
      context: ../../
      dockerfile: deploy/docker/reservations/Dockerfile
    env_file:
      - ./environment/common.env
    networks:
      - backend
      - frontend
    volumes:
      - "./environment/keys/user-key:/user-key:ro"
      - ./logs/firecrest:/var/log:delegated
      - ./ssl:/ssl

  # auxiliary containers
  cluster:
    # runs on private network to avoid conflict with a local SSH server
    build:
      context: ./
      dockerfile: ./cluster/Dockerfile
    hostname: cluster
    cap_add:
      - SYS_ADMIN
    networks:
      - backend
      - frontend


  minio:
    # runs on private network so "cluster" can reach it
    container_name: minio_test_build
    image: minio/minio:RELEASE.2021-02-01T22-56-52Z
    command: minio server /data
    environment:
      MINIO_ACCESS_KEY: storage_access_key
      MINIO_SECRET_KEY: storage_secret_key
    networks:
      - backend
      - frontend
    ports:
      - "9000:9000"

  taskpersistence:
    image: redis:5
    command: redis-server /redis.conf
    networks:
      - backend
      - frontend
    volumes:
      - ./taskpersistence/redis.conf:/redis.conf:ro
      - ./logs/firecrest:/var/log:delegated

  opa:
    image: openpolicyagent/opa:0.22.0
    command: run --server --log-level=debug --log-format=json-pretty --tls-cert-file=/ssl/f7t_internal.crt --tls-private-key-file=/ssl/f7t_internal.key /opa-files/data.json /opa-files/policy.rego --addr http://0.0.0.0:8282
    networks:
      - backend
      - frontend
    volumes:
      - ./opa:/opa-files
      - ./ssl:/ssl

  openapi:
    image: swaggerapi/swagger-ui:v3.22.0
    networks:
      - backend
      - frontend
    ports:
      - "9090:8080"
    environment:
      SWAGGER_JSON: /tmp/firecrest-developers-api.yaml
    volumes:
      - ../../doc/openapi/:/tmp/

# For now all containers are attached to both networks.
# Next step is to split microservices to the
# correct networks to reflect production reality.
networks:
  backend:
    name: f7t-backend
  frontend:
    name: f7t-frontend