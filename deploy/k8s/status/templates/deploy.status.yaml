apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-status
  namespace: {{ .Values.global.namespace }}
  {{ if ne .Values.global.environment "dev" }}
  annotations:
    configmap.reloader.stakater.com/reload: "status-env-file,common-env-file"
  {{ end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: status
  template:
    metadata:
      labels:
        app: status
        role: microservice
    spec:
      containers:
      - image: "{{ .Values.global.registry }}/status:{{ .Values.global.tag }}"
        imagePullPolicy: Always
        name: status
        ports:
        - containerPort: {{ .Values.F7T_STATUS_PORT | atoi }}
        envFrom:
        - configMapRef:
            name: common-env-file
        - configMapRef:
            name: status-env-file
        volumeMounts:
        - mountPath: /var/log
          name: logs-endpoint
        - mountPath: /f7t-ssl.crt
          name: f7t-ssl-crt
          subPath: f7t-ssl.crt
        - mountPath: /f7t-ssl.key
          name: f7t-ssl-key
          subPath: f7t-ssl.key
        startupProbe:
          tcpSocket:
            port: {{ .Values.F7T_STATUS_PORT | atoi }}
          initialDelaySeconds: 5
          failureThreshold: 1
      volumes:
      - emptyDir: {}
        name: logs-endpoint
      - name: f7t-ssl-crt
        configMap:
          name: f7t-ssl-crt
      - name: f7t-ssl-key
        configMap:
          name: f7t-ssl-key
