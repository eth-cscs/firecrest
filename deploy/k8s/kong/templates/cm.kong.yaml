apiVersion: v1
items:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: f7t-kong
    namespace: {{ .Values.global.namespace }}
    annotations:
      reloader.stakater.com/match: "true"
  data:
    kong.yaml: |
      _format_version: "1.1"
      plugins:
      - name: jwt
        # global plugin: applies to all request
        config:
          #_comment: "MUST add exp (expiration) and nbf, not enabled by default"
          claims_to_verify: [exp]
      - name: request-termination
        route: reject
        config:
          status_code: 400
          message: "Invalid"
      - name: zipkin
        config:
          http_endpoint: http://svc-jaeger:9411/api/v2/spans
          sample_ratio: 1
          include_credential: true
          traceid_byte_count: 16
          header_type: preserve
          default_header_type: jaeger
      - name: cors
        config:
          origins:
          - "*"
          methods:
          - GET
          - POST
          - PUT
          - DELETE
          headers:
          - Accept
          - X-Machine-Name
          - X-Task-Id
          - Authorization
          - Content-Type
          credentials: false
          max_age: 3600

      consumers:
      {{- range .Values.global.auth }}
      - jwt_secrets:
        - key: "{{ .F7T_AUTH_ISSUER }}"
          algorithm: "{{ .F7T_AUTH_REALM_TYPE }}"
          rsa_public_key: "-----BEGIN PUBLIC KEY-----\n{{ .F7T_AUTH_REALM_PUBKEY }}\n-----END PUBLIC KEY-----"
        username: "{{ .username }}"
      {{- end }}
      
      - username: docs
        custom_id: docs

      routes:
      - name: reject
        # rejects any undefined route with 'request-termination' plugin
        paths:
        - /
        - /tasks/tasklist
      services:
      - name: compute
        url: "{{if .Values.F7T_SSL_USE}}https{{else}}http{{end}}://{{ .Values.global.F7T_COMPUTE_HOST }}:{{ .Values.global.F7T_COMPUTE_PORT }}"
        routes:
        - name: compute
          methods: [DELETE,GET,POST]
          paths:
          - /compute/
      - name: docs
        url: "{{ .Values.global.F7T_SWAGGER_HOST }}:{{ .Values.global.F7T_SWAGGER_PORT }}"
        routes:
        - name: docs
          methods: [GET]
          paths:
            - /docs
          strip_path: false
          plugins:
          - name: jwt
            config:
              anonymous: docs
      - name: status
        url: "{{if .Values.F7T_SSL_USE}}https{{else}}http{{end}}://{{ .Values.global.F7T_STATUS_HOST }}:{{ .Values.global.F7T_STATUS_PORT }}"
        routes:
        - name: status
          methods: [GET]
          paths:
          - /status/
      - name: storage
        url: "{{if .Values.F7T_SSL_USE}}https{{else}}http{{end}}://{{ .Values.global.F7T_STORAGE_HOST }}:{{ .Values.global.F7T_STORAGE_PORT }}"
        routes:
        - name: storage
          methods: [GET,POST]
          paths:
          - /storage/
      - name: tasks
        url: "{{if .Values.F7T_SSL_USE}}https{{else}}http{{end}}://{{ .Values.global.F7T_TASKS_HOST }}:{{ .Values.global.F7T_TASKS_PORT }}"
        routes:
        - name: tasks
          methods: [GET]
          paths:
          - /tasks
      - name: utilities
        url: "{{if .Values.F7T_SSL_USE}}https{{else}}http{{end}}://{{ .Values.global.F7T_UTILITIES_HOST }}:{{ .Values.global.F7T_UTILITIES_PORT }}"
        routes:
        - name: utilities
          methods: [DELETE,GET,POST,PUT]
          paths:
          - /utilities/
      {{ if .Values.global.include_reservations }}
      - name: reservations
        url: "{{if .Values.F7T_SSL_USE}}https{{else}}http{{end}}://{{ .Values.global.F7T_RESERVATIONS_HOST }}:{{ .Values.global.F7T_RESERVATIONS_PORT }}"
        routes:
        - name: reservations
          methods: [DELETE,GET,POST,PUT]
          paths:
          - /reservations
      {{ end }}
kind: List
