##
##  Copyright (c) 2019-2023, ETH Zurich. All rights reserved.
##
##  Please, refer to the LICENSE file in the root directory.
##  SPDX-License-Identifier: BSD-3-Clause
##
version: '3.4'

networks:
  firecrest-internal:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 192.168.220.0/24


services:
  f7t-base:
    image: "f7t-base"
    container_name: f7t-base
    build:
      context: ../../
      dockerfile: deploy/docker/base/Dockerfile
      network: host
  # FirecREST microservices
  certificator:
    image: f7t-certificator
    container_name: certificator
    build:
      context: ../../
      dockerfile: deploy/docker/certificator/Dockerfile
      network: host
    env_file:
      - ./common/common.env
    environment:
      - F7T_CA_KEY_PATH=/etc/firecrest/ca-key
      - F7T_PUB_USER_KEY_PATH=/etc/firecrest/user-key.pub
    networks:
      firecrest-internal:
        ipv4_address: 192.168.220.11
    ports:
      - 5010:5010
    volumes:
      - ./logs/firecrest:/var/log:delegated
      - ../test-build/environment/keys/user-key.pub:/etc/firecrest/user-key.pub:ro
      - ../test-build/environment/keys/ca-key:/etc/firecrest/ca-key:ro
      - ./ssl:/ssl

  compute:
    image: f7t-compute
    container_name: compute
    build:
      context: ../../
      dockerfile: deploy/docker/compute/Dockerfile
      network: host
    environment:
      - F7T_PRIV_USER_KEY_PATH=/etc/firecrest/ssh/user-key
    env_file:
      - ./common/common.env
    networks:
      firecrest-internal:
        ipv4_address: 192.168.220.9
    ports:
      - 5006:5006
    volumes:
      - ./logs/firecrest:/var/log:delegated
      - ../test-build/environment/keys/user-key:/etc/firecrest/ssh/user-key:ro
      - ./ssl:/ssl

  status:
    image: f7t-status
    container_name: status
    build:
      context: ../../
      dockerfile: deploy/docker/status/Dockerfile
      network: host
    env_file:
      - ./common/common.env
    networks:
      firecrest-internal:
        ipv4_address: 192.168.220.4
    ports:
      - 5001:5001
    volumes:
      - ./logs/firecrest:/var/log:delegated
      - ./ssl:/ssl

  storage:
    image: f7t-storage
    container_name: storage
    build:
      context: ../../
      dockerfile: deploy/docker/storage/Dockerfile
      network: host
    env_file:
      - ./common/common.env
    environment:
      F7T_S3_PRIVATE_URL: http://192.168.220.19:9000
      F7T_S3_PUBLIC_URL: http://192.168.220.19:9000
      F7T_S3_ACCESS_KEY: storage_access_key
      F7T_S3_SECRET_KEY: storage_secret_key
      F7T_S3_REGION: us-east-1
      F7T_STORAGE_POLLING_INTERVAL: 60
      F7T_CERT_CIPHER_KEY: 'Df6UZuoPoJ2u5yRwxNfFQ46Nwy8eW1OGTcuhlqn4ONo='
      #debug: "True"
    networks:
      firecrest-internal:
        ipv4_address: 192.168.220.5
    volumes:
      - ./logs/firecrest:/var/log:delegated
      - ../test-build/environment/keys/user-key:/user-key:ro
      - ./ssl:/ssl

  tasks:
    image: f7t-tasks
    container_name: tasks
    build:
      context: ../../
      dockerfile: deploy/docker/tasks/Dockerfile
      network: host
    env_file:
      - ./common/common.env
    environment:
      - F7T_PERSIST_PORT=6379
      - F7T_PERSIST_PWD=rediS2200
      - F7T_DEBUG_MODE=True
      - F7T_COMPUTE_TASK_EXP_TIME=86400
      - F7T_STORAGE_TASK_EXP_TIME=2678400
    depends_on:
      - "taskpersistence"
    networks:
      firecrest-internal:
        ipv4_address: 192.168.220.6
    ports:
      - 5003:5003
    volumes:
      - ./logs/firecrest:/var/log:delegated
      - ./ssl:/ssl

  utilities:
    image: f7t-utilities
    container_name: utilities
    build:
      context: ../../
      dockerfile: deploy/docker/utilities/Dockerfile
      network: host
    env_file:
      - ./common/common.env
    networks:
      firecrest-internal:
        ipv4_address: 192.168.220.7
    ports:
      - 5004:5004
    volumes:
      - ./logs/firecrest:/var/log:delegated
      - ../test-build/environment/keys/user-key:/user-key:ro
      - ./ssl:/ssl

  reservations:
    image: f7t-reservations
    container_name: reservations
    build:
      context: ../../
      dockerfile: deploy/docker/reservations/Dockerfile
      network: host
    env_file:
      - ./common/common.env
    networks:
      firecrest-internal:
        ipv4_address: 192.168.220.8
    ports:
      - 5005:5005
    volumes:
      - ./logs/firecrest:/var/log:delegated
      - ../test-build/environment/keys/user-key:/user-key:ro
      - ./ssl:/ssl

  # web client
  client:
    image: f7t-client
    container_name: client
    build:
      context: ../../src/tests/template_client
      dockerfile: ./Dockerfile
      network: host
    networks:
      firecrest-internal:
        ipv4_address: 192.168.220.30
    ports:
      - "7000:5000"
    volumes:
      - ./demo_client/config.py:/app/config.py:ro
      - ./demo_client/client_secrets.json:/app/client_secrets.json:ro
      - ./logs/client:/var/log:delegated

  # dummy cluster
  cluster:
    image: f7t-cluster
    container_name: cluster
    build:
      context: ../test-build
      dockerfile: ./cluster/Dockerfile
      network: host
    networks:
      firecrest-internal:
        ipv4_address: 192.168.220.12
    hostname: cluster
    volumes:
      - ./logs/cluster/:/var/log/slurm/:delegated

  # complementary 3rd party services
  keycloak:
    image: "quay.io/keycloak/keycloak:18.0.2"
    container_name: fckeycloak
    env_file: keycloak/keycloak.env
    command: start-dev  --http-relative-path /auth --import-realm

    networks:
      firecrest-internal:
        ipv4_address: 192.168.220.20
    ports:
      - "${KEYCLOAK_PORT:-8080}:8080"
    volumes:
      - ./keycloak/config.json:/opt/keycloak/data/import/config.json:ro
      - ./logs/keycloak:/opt/jboss/keycloak/standalone/log/:delegated

  kong:
    image: kong:2.5.0
    container_name: kong
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/kong.yml
      - KONG_LOG_LEVEL=error
    volumes:
      - ./kong/kong.yml:/kong.yml:ro
    networks:
      firecrest-internal:
        ipv4_address: 192.168.220.21
    ports:
      - 8000:8000

  minio:
    image: minio/minio:RELEASE.2021-02-01T22-56-52Z
    command: minio server /data
    container_name: minio
    environment:
     MINIO_ACCESS_KEY: storage_access_key
     MINIO_SECRET_KEY: storage_secret_key
    networks:
      firecrest-internal:
        ipv4_address: 192.168.220.19
    ports:
      - "9000:9000"
    volumes:
      - ./minio:/data:delegated

  taskpersistence:
    container_name: taskpersistence
    image: redis:5
    command: redis-server /redis.conf
    networks:
      firecrest-internal:
        ipv4_address: 192.168.220.13
    volumes:
      - ./taskpersistence/redis.conf:/redis.conf:ro
      - ./taskpersistence-data:/data:delegated
      - ./logs:/var/log:delegated

  opa:
    image: openpolicyagent/opa:0.22.0
    container_name: opa
    command: run --server --log-level=debug --log-format=json-pretty --skip-version-check --tls-cert-file=/ssl/f7t_internal.crt --tls-private-key-file=/ssl/f7t_internal.key /opa-files/data.json /opa-files/policy.rego
    networks:
      firecrest-internal:
        ipv4_address: 192.168.220.40
    ports:
      - "8181:8181"
    volumes:
      - ./opa:/opa-files
      - ./ssl:/ssl

  openapi:
    image: swaggerapi/swagger-ui:v3.47.1
    container_name: openapi
    ports:
      - "9090:8080"
    environment:
      SWAGGER_JSON: /tmp/firecrest-api.yaml
    volumes:
      - ../../doc/openapi/:/tmp/

  jaeger:
    image: jaegertracing/all-in-one:1.24
    container_name: jaeger
    networks:
      firecrest-internal:
        ipv4_address: 192.168.220.50
    environment:
       COLLECTOR_ZIPKIN_HOST_PORT: "9411"
    ports:
      #- 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 14250:14250
      - 9411:9411
